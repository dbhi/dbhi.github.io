(function(e){function t(t){for(var n,s,r=t[0],c=t[1],l=t[2],d=0,u=[];d<r.length;d++)s=r[d],Object.prototype.hasOwnProperty.call(i,s)&&i[s]&&u.push(i[s][0]),i[s]=0;for(n in c)Object.prototype.hasOwnProperty.call(c,n)&&(e[n]=c[n]);h&&h(t);while(u.length)u.shift()();return o.push.apply(o,l||[]),a()}function a(){for(var e,t=0;t<o.length;t++){for(var a=o[t],n=!0,s=1;s<a.length;s++){var r=a[s];0!==i[r]&&(n=!1)}n&&(o.splice(t--,1),e=c(c.s=a[0]))}return e}var n={},s={app:0},i={app:0},o=[];function r(e){return c.p+"js/"+({doc:"doc",run:"run"}[e]||e)+"."+{doc:"474bc46f",run:"b08f25bf"}[e]+".js"}function c(t){if(n[t])return n[t].exports;var a=n[t]={i:t,l:!1,exports:{}};return e[t].call(a.exports,a,a.exports,c),a.l=!0,a.exports}c.e=function(e){var t=[],a={run:1};s[e]?t.push(s[e]):0!==s[e]&&a[e]&&t.push(s[e]=new Promise((function(t,a){for(var n="css/"+({doc:"doc",run:"run"}[e]||e)+"."+{doc:"31d6cfe0",run:"8ab5171a"}[e]+".css",i=c.p+n,o=document.getElementsByTagName("link"),r=0;r<o.length;r++){var l=o[r],d=l.getAttribute("data-href")||l.getAttribute("href");if("stylesheet"===l.rel&&(d===n||d===i))return t()}var u=document.getElementsByTagName("style");for(r=0;r<u.length;r++){l=u[r],d=l.getAttribute("data-href");if(d===n||d===i)return t()}var h=document.createElement("link");h.rel="stylesheet",h.type="text/css",h.onload=t,h.onerror=function(t){var n=t&&t.target&&t.target.src||i,o=new Error("Loading CSS chunk "+e+" failed.\n("+n+")");o.code="CSS_CHUNK_LOAD_FAILED",o.request=n,delete s[e],h.parentNode.removeChild(h),a(o)},h.href=i;var p=document.getElementsByTagName("head")[0];p.appendChild(h)})).then((function(){s[e]=0})));var n=i[e];if(0!==n)if(n)t.push(n[2]);else{var o=new Promise((function(t,a){n=i[e]=[t,a]}));t.push(n[2]=o);var l,d=document.createElement("script");d.charset="utf-8",d.timeout=120,c.nc&&d.setAttribute("nonce",c.nc),d.src=r(e);var u=new Error;l=function(t){d.onerror=d.onload=null,clearTimeout(h);var a=i[e];if(0!==a){if(a){var n=t&&("load"===t.type?"missing":t.type),s=t&&t.target&&t.target.src;u.message="Loading chunk "+e+" failed.\n("+n+": "+s+")",u.name="ChunkLoadError",u.type=n,u.request=s,a[1](u)}i[e]=void 0}};var h=setTimeout((function(){l({type:"timeout",target:d})}),12e4);d.onerror=d.onload=l,document.head.appendChild(d)}return Promise.all(t)},c.m=e,c.c=n,c.d=function(e,t,a){c.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},c.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},c.t=function(e,t){if(1&t&&(e=c(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(c.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)c.d(a,n,function(t){return e[t]}.bind(null,n));return a},c.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return c.d(t,"a",t),t},c.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},c.p="/concept/",c.oe=function(e){throw console.error(e),e};var l=window["webpackJsonp"]=window["webpackJsonp"]||[],d=l.push.bind(l);l.push=t,l=l.slice();for(var u=0;u<l.length;u++)t(l[u]);var h=d;o.push([0,"chunk-vendors"]),a()})({0:function(e,t,a){e.exports=a("56d7")},"012e":function(e,t,a){"use strict";a.r(t),t["default"]={content:"",data:{id:"nxp",status:"out-of-scope",artifacts:null},isEmpty:!1,excerpt:""}},"04ab":function(e,t,a){"use strict";a.r(t),t["default"]={content:"\n- Build VHDL sources on/for amd64.\n- Build VHPI wrapper (C) on/for amd64.\n- Build gRPC client (C or golang) with the VHPI wrapper (C) on/for amd64.\n- Modify the sources to use the gRPC client library (C), instead of the original function.\n- Build the application on/for ARM.\n- Get/build gRPC server on/for amd64 or ARM.\n",data:{id:"yax",status:"supported",artifacts:["grpc","app:arm","hgrpc:amd64"],dependencies:["ghdl","gcc","golang","protoc"]},isEmpty:!1,excerpt:""}},"0b1b":function(e,t,a){"use strict";a.r(t),t["default"]={content:"\n- Build VHDL sources on/for amd64.\n- Build VHPI wrapper (C) on/for amd64.\n- Build gRPC client (C or golang) with the VHPI wrapper (C) on/for amd64.\n- Build plugin (C) with the gRPC client library (C) on/for ARM.\n- Get the application on/for ARM.\n- Get/build gRPC server on/for amd64 or ARM.\n",data:{id:"nax",status:"supported",artifacts:["grpc","dgrpc:arm","app:arm","hgrpc:amd64"],dependencies:["ghdl","gcc","dbm","golang","protoc"]},isEmpty:!1,excerpt:""}},"0d40":function(e,t,a){},1248:function(e,t,a){},"1c1a":function(e,t,a){var n={"./cases.md":"6a03","./naa.md":"2f19","./nap.md":"69e0","./nax.md":"0b1b","./nxp.md":"012e","./yaa.md":"6e08","./yap.md":"c40d","./yax.md":"04ab","./yxa.md":"6242","./yxp.md":"84ae","./yxx.md":"dab9"};function s(e){var t=i(e);return a(t)}function i(e){if(!a.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}s.keys=function(){return Object.keys(n)},s.resolve=i,e.exports=s,s.id="1c1a"},"22c4":function(e,t,a){},"2d0c":function(e,t,a){"use strict";a.r(t),t["default"]={content:"- Add 'title' attribute to the links in the navbar.\n- Add 'Edit on GitHub' link to all the pages. Link to both `vue` and `md` sources.\n- Allow to export some pages/parts to markdown/pdf.\n- Adapt marked to apply custom Bulma CSS classes as a complement to using class 'content': https://marked.js.org/#/USING_PRO.md\n\n# Router\n\n- Support jumping to `/tools/docker`.\n- Support jumping to `/tools/install`.\n\n# Persistent\n\n- Remember which example is selected in 'Examples'.\n- Remember which use case is selected in 'Use cases'.\n\n# Tools\n\n- Add short/brief description of each tool.\n- Better title than 'Third-party tools'.\n- Better intro.\n- Describe main docker images (`*-latest`, `*-mambo`, `*-dr`, etc.).\n- Add reference to `setup_pynq.sh` script.\n\n# Footer\n\n- Select license or remove the corresponding shield.\n- 'Commits since' shield won't work until a release is published.\n\n# Flow\n\n- Elaborate web version of the LaTeX/TikZ diagram, split intro multiple 'mutated' smaller diagrams.\n- Add the long step-by-step list that was removed from the paper.\n- 'Animate' small diagrams to transition from one to another. Display it as slides of a presentation.\n\n# Run\n\n- Allow to zoom in/out.\n- Now, `viz.js` is used to render the DOT graphs. However, the project is archived because it is based on compiling the Graphviz source code with [Emscripten](http://kripken.github.io/emscripten-site/), and better alternatives exist (see [mdaines/viz.js](https://github.com/mdaines/viz.js)). It is suggested to use [`dagrejs`](https://github.com/dagrejs) instead. `dagrejs` is a layout library that relies on third-party projects for rendering. Currently `D3`, `JointJS` and `Cytoscape.js` are supported (see [A Note on Rendering](https://github.com/dagrejs/dagre/wiki#a-note-on-rendering)). It would be interesting to replace `viz.js` with `dagrejs` and [`Cytoscape.js`](http://js.cytoscape.org/), since it would allow multiple interactive features such as moving nodes, grouping them in boxes, making collapsible elements, etc. [demo](http://cs.brown.edu/people/jcmace/d3/graph.html?id=small.json) is an example; using JointJS tho. This seems to be a better approach than e.g. [magjac/d3-graphviz](https://github.com/magjac/d3-graphviz).\n\n# Examples\n\n- Add 'interactive' tree-view of the files involved in each examples. Add link to the corresponding subdir in the repo.\n  - Add (un)fold all buttons.\n  - For each item, show brief description on hover, or in a modal/popup, or in the same line (ragged right).\n  - For each item, show icon corresponding to the file type.\n- Add description of each example.\n- Add results table of each example where each row corresponds to a target device and use case, and each column represents a measurement.\n- Add table summarizing all the results.\n\n# Use cases\n\n- Show warning (e.g. change color of 0/0 tag) when not all the rows are being shown. Show a popup on click, showing a message to suggest opening the key.\n- Change the cursor when hovering a row, to let the user know that it is clickable.\n- Include buttons to select all or to clear all the filters.\n- Add references from 'Dependencies' tags to `/tools/<tool>`.\n- Generate list of steps automatically from dependencies graphviz diagram.\n- Show graphviz diagram. Filter it when a case is selected.\n- Add 'eye' symbol to optionally filter all the rows except the selected one. If it is unselected in this mode, disable 'eye' filter automatically.\n- Show example script to build the artifacts of the selected case.\n  - Script based on calls to `dbhi build` and `dbhi test`.\n\n## Dependencies SVG\n\n- Make it 'interactive'.\n\n  - When hovering an item, reduce the opacity of all the elements which are not in the dependency chain.\n  - If click on an item, 'fix' the visible chain.\n  - Add 'details' icon to each box/element. Show modal/popup with relevant info: brief description, used tool, inputs, outputs.\n\n- [magjac/d3-graphviz](https://github.com/magjac/d3-graphviz)\n\n  - [d3-graphviz Demo](https://bl.ocks.org/magjac/4acffdb3afbc4f71b448a210b5060bca)\n\n- Since gonum allows to export to [Cytoscape.js](http://js.cytoscape.org/) format, it might be worth trying to build a basic GUI app on top of it. I.e., trigger certain events (show/hide blocks/modals) when the user clicks on a node.\n\n# Doc\n\n- Intro about the features built in the CLI tool:\n  - `site` subcommands to generate and serve the site.\n  - `build` subcommands to generate artifacts.\n  - `test` subcommands to execute the artifacts and measure usage of cpu, mem, etc.\n  - `install` subcommand to handle the installation of dependencies.\n  - Format of `.dbhi.json`.\n  - Format of `project.json`.\n- cobra doc of `cli`. See [Generating Markdown Docs For Your Own cobra.Command](https://github.com/spf13/cobra/blob/master/doc/md_docs.md).\n- godoc of `cli` (`cli/cmd`, `cli/lib`, `cli/utils`).\n- papers\n  - https://github.com/eueung/hugo-paper-now\n\n# Similar projects\n\n- https://gitlab.com/reds-public/fss\n- https://compas.cs.stonybrook.edu/projects/fpgacloud/vm-hdl-cosim/\n- https://github.com/wzab/wzab-hdl-library/tree/master/vzmq\n- https://github.com/texane/vpcie\n",data:{},isEmpty:!1,excerpt:""}},"2f19":function(e,t,a){"use strict";a.r(t),t["default"]={content:"\n- Build VHDL sources on/for ARM.\n- Build VHPI wrapper (C) on/for ARM.\n- Build plugin (C) with the VHPI wrapper (C) on/for ARM.\n- Get the application for ARM.\n",data:{id:"naa",status:"supported",artifacts:["app:arm","hdbm:arm"],dependencies:["ghdl","gcc","dbm"]},isEmpty:!1,excerpt:""}},3694:function(e,t,a){"use strict";a("1248")},5008:function(e,t,a){},5421:function(e,t,a){"use strict";a.r(t),t["default"]={content:"\nno content yet\n",data:{tool:"GCC",gh:"gcc-mirror/gcc",wikipedia:"GNU_Compiler_Collection",site:"https://gcc.gnu.org/"},isEmpty:!1,excerpt:""}},"56d7":function(e,t,a){"use strict";a.r(t);a("e260"),a("e6cf"),a("cca6"),a("a79d");var n=a("2b0e"),s=a("62b0"),i=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{attrs:{id:"app"}},[a("NavBar"),a("div",{class:{nothome:"home"!=e.$router.currentRoute.name},attrs:{id:"view"}},[a("router-view")],1),"home"!=e.$router.currentRoute.name?a("Foot"):e._e()],1)},o=[],r=(a("ac1f"),a("1276"),a("5319"),a("a15b"),a("fb6a"),a("5363"),a("289d")),c=(a("5abe"),function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("nav",{staticClass:"navbar is-fixed-top is-transparent",attrs:{role:"navigation","aria-label":"main navigation"}},[a("div",{staticClass:"container"},[a("div",{staticClass:"navbar-brand"},[a("router-link",{staticClass:"navbar-item",staticStyle:{"padding-top":"0","padding-bottom":"0"},attrs:{to:"/"}},[a("b-icon",{staticStyle:{"padding-bottom":"2px"},attrs:{icon:"source-fork",size:"is-medium","custom-size":"mdi-24px"}}),a("span",{staticStyle:{"font-size":"2rem","font-family":"BigJohnPROBold"}},[e._v("DBHI")])],1),e._m(0)],1),a("div",{staticClass:"navbar-menu",attrs:{id:"navbarBasicExample"}},[a("div",{staticClass:"navbar-start"},e._l(e.menu.left,(function(t){return a("router-link",{key:t.link,staticClass:"navbar-item",attrs:{to:t.link,"active-class":"is-active"}},[e._v(e._s(t.name))])})),1),a("div",{staticClass:"navbar-end"},[a("div",{staticClass:"navbar-item"},e._l(e.menu.right,(function(t){return a("router-link",{key:t.link,staticClass:"navbar-item",attrs:{to:t.link,"active-class":"is-active"}},[e._v(e._s(t.name))])})),1)])])])])}),l=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("a",{staticClass:"navbar-burger burger",attrs:{role:"button","aria-label":"menu","aria-expanded":"false","data-target":"navbarBasicExample"}},[a("span",{attrs:{"aria-hidden":"true"}}),a("span",{attrs:{"aria-hidden":"true"}}),a("span",{attrs:{"aria-hidden":"true"}})])}],d={name:"navbar",data:function(){return{menu:a("d4db")}}},u=d,h=(a("3694"),a("2877")),p=Object(h["a"])(u,c,l,!1,null,"4822a918",null),m=p.exports,f=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("footer",{staticClass:"footer"},[a("div",{staticClass:"buttons is-centered"},e._l(e.shields,(function(e){return a("a",{key:e.ref+e.title,staticClass:"tag",attrs:{title:e.title,href:e.ref}},[a("img",{attrs:{src:e.src}})])})),0)])},b=[],g={name:"foot",data:function(){return{shields:a("adef")}}},v=g,y=(a("5e63"),Object(h["a"])(v,f,b,!1,null,"69a10f29",null)),w=y.exports;n["a"].use(r["a"]);var x=a("7c5c"),_=x.marked;n["a"].mixin({mounted:function(){var e=localStorage.getItem("GoToPath");if(e){console.log("GoToPath:",e),localStorage.removeItem("GoToPath");var t=e.split("/");"concept"===t[1]?this.$router.replace({path:t.slice(2).join("/")}):window.location.href="/"}},methods:{marked:function(e){return e?_(e):""},tagColor:function(e){switch(e){case"arm":return"is-info";case"amd64":return"is-dark";case"ghdl":case"gcc":case"dbm":case"golang":case"protoc":return"is-light";default:return"is-primary"}},stIcon:function(e){switch(e){case"supported":return"check";case"roadmap":return"map-marker-distance";case"third-party":return"bookmark";case"out-of-scope":return"map-marker-off";default:return"help"}},stType:function(e){switch(e){case"supported":return"is-success";case"roadmap":return"is-warning";case"third-party":return"is-info";default:return"is-danger"}}}});var C={name:"app",components:{NavBar:m,Foot:w},data:function(){return{shields:a("adef")}}},k=C,D=(a("5c0b"),Object(h["a"])(k,i,o,!1,null,null,null)),O=D.exports,S=(a("d3b7"),a("3ca3"),a("ddb0"),a("8c4f")),H=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},I=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"home",staticStyle:{height:"100%",display:"flex","flex-direction":"column"}},[a("div",{staticStyle:{height:"100%",display:"flex","flex-grow":"1"}},[a("div",{staticClass:"level",staticStyle:{width:"55%",height:"100%","background-color":"#ec563c"}},[a("div",{staticClass:"level-left"}),a("div",{staticClass:"level-right"},[a("div",{staticClass:"level-item",staticStyle:{"font-size":"12rem","font-family":"BigJohnPROBold","padding-right":"2rem"}},[e._v(" DBHI ")])])]),a("div",{staticClass:"level",staticStyle:{width:"45%",height:"100%","background-color":"#f2f1ef"}},[a("div",{staticClass:"level-left"},[a("div",{staticClass:"level-item",staticStyle:{"font-family":"BigJohnPRORegular","letter-spacing":"1.25rem","flex-direction":"column","align-items":"baseline","padding-left":"3rem","font-size":"2.25rem"}},[a("p",[e._v("Dynamic")]),a("p",[e._v("Binary")]),a("p",[e._v("Hardware")]),a("p",[e._v("Injection")])])]),a("div",{staticClass:"level-right"})])]),a("div",{staticStyle:{height:"15%",display:"flex"}},[a("div",{staticStyle:{width:"55%",height:"100%","background-color":"#ec563c"}}),a("div",{staticStyle:{width:"45%",height:"100%","background-color":"#f2f1ef"}})]),a("div",{staticClass:"title is-4",staticStyle:{position:"fixed",bottom:"20%",width:"100%","font-family":"BigJohnPRORegular"}},[e._v(" Decoupled functional hardware-software co-design on SoCs with FPGA, using dynamic binary modification to inject compiled HDL designs. ")])])}],L={},E=Object(h["a"])(L,H,I,!1,null,null,null),P=E.exports,T=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"tools container"},[a("section",{staticClass:"section"},[a("h1",{staticClass:"title"},[e._v("Third-party tools")]),a("div",{staticClass:"content has-text-justified"},[e._v(e._s(e.intro))])]),a("div",{staticClass:"tile is-ancestor"},e._l(e.cols,(function(t,n){return a("div",{key:n,staticClass:"tile is-parent is-vertical"},e._l(t,(function(t,s){return a("article",{key:s,staticClass:"tile is-child"},[a("div",{staticClass:"box"},[a("div",{staticClass:"level"},[a("div",{staticClass:"level-left"},[a("div",{staticClass:"level-item is-grouped",on:{click:function(t){return e.toggle(n,s)}}},[a("a",{staticClass:"control"},[a("b-icon",{attrs:{icon:"chevron-"+(e.show[n][s]?"down":"right"),"custom-class":e.show[n][s]?"is-expanded":""}})],1),a("a",{staticClass:"control"},[a("span",{staticClass:"title is-4"},[e._v(e._s(t.tool))])])])]),a("div",{staticClass:"level-right is-grouped"},[a("div",{staticClass:"control"},[t.gh?a("a",{attrs:{href:"https://github.com/"+t.gh}},[a("b-icon",{attrs:{icon:"github-circle","custom-size":"mdi-24px"}})],1):e._e(),t.gh?e._e():a("p",{staticStyle:{opacity:"0.5"}},[a("b-icon",{attrs:{icon:"github-circle","custom-size":"mdi-24px"}})],1)]),a("div",{staticClass:"control"},[t.wikipedia?a("a",{attrs:{href:"https://en.wikipedia.org/wiki/"+t.wikipedia}},[a("b-icon",{attrs:{icon:"wikipedia","custom-size":"mdi-24px"}})],1):e._e(),t.wikipedia?e._e():a("p",{staticStyle:{opacity:"0.5"}},[a("b-icon",{attrs:{icon:"wikipedia","custom-size":"mdi-24px"}})],1)]),a("div",{staticClass:"control"},[t.site?a("a",{attrs:{href:t.site}},[a("b-icon",{attrs:{icon:"web","custom-size":"mdi-24px"}})],1):e._e(),t.site?e._e():a("p",{staticStyle:{opacity:"0.5"},attrs:{href:t.site}},[a("b-icon",{attrs:{icon:"web","custom-size":"mdi-24px"}})],1)])])]),a("div",{directives:[{name:"show",rawName:"v-show",value:e.show[n][s],expression:"show[i][k]"}]},[a("hr"),e._v(" "+e._s(t.desc)+" ")])])])})),0)})),0),a("div",{staticClass:"section content has-text-justified",domProps:{innerHTML:e._s(e.marked(e.content))}})])},A=[],M=(a("b64b"),a("e9c4"),{}),j={left:{},right:{}},U={left:{},right:{}};["ghdl","vunit","mambo","dynamorio","gcc","spinalhdl","golang","protoc","gtkwave","docker"].forEach((function(e){var t=a("ad34")("./"+e+".md").default;M[e]=t.data,M[e].desc=t.content,M[e].show=!1}));for(var V=Object.keys(M),R=0;R<V.length;R++){var G=R<Math.round(V.length/2)?"left":"right";j[G][V[R]]=M[V[R]],U[G][V[R]]=!1}var B=a("c1e3").default,z={name:"tools",data:function(){return{cols:j,show:U,intro:B.data.intro,content:B.content}},methods:{toggle:function(e,t){this.show[e][t]=!this.show[e][t],localStorage.setItem("tools-show",JSON.stringify(this.show))}},mounted:function(){try{var e=JSON.parse(localStorage.getItem("tools-show"));null!=e&&(this.show=e)}catch(a){localStorage.removeItem("tools-show")}var t=this.$route.params.tool;void 0!=this.cols.left[t]&&(this.show.left[t]=!0),void 0!=this.cols.right[t]&&(this.show.right[t]=!0)}},N=z,F=(a("93bd"),Object(h["a"])(N,T,A,!1,null,"35fb8e5e",null)),$=F.exports,q=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},J=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"flow container"},[a("div",[e._v("General flow diagram + step list, from LaTeX(TikZ)")])])}],K={},Q=Object(h["a"])(K,q,J,!1,null,null,null),W=Q.exports,Y=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"examples container"},[e._m(0),a("div",{staticClass:"tabs is-centered"},[a("ul",e._l(e.examples,(function(t,n){return a("li",{key:n,class:{"is-active":n==e.active}},[a("a",{on:{click:function(t){e.active=n}}},[e._v(e._s(n))])])})),0)]),a("div",{staticClass:"content has-text-justified"},[a("div",{staticClass:"box"},[a("ul",{staticClass:"no-list-style"},e._l(e.examples[e.active].tree,(function(e,t){return a("TreeView",{key:t,staticClass:"tree",attrs:{name:t,tree:e}})})),1)]),a("div",{domProps:{innerHTML:e._s(e.marked(e.examples[e.active].content))}})])])},X=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("section",{staticClass:"section"},[a("h1",{staticClass:"title"},[e._v("Working examples")])])}],Z=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("li",[a("div",{class:{isfolder:e.isFolder},on:{click:e.toggle}},[a("b-taglist",{attrs:{attached:""}},[e.isFolder?a("b-tag",{attrs:{size:"is-small"}},[e.isFolder?a("b-icon",{attrs:{icon:"chevron-"+(e.isOpen?"down":"right"),type:"is-primary"}}):e._e()],1):e._e(),a("b-tag",{attrs:{size:"is-small"}},[e._v(e._s(e.name)+e._s(e.isFolder?"/":""))]),a("span",{staticStyle:{"margin-bottom":"0.5rem","padding-left":"1rem"}},[e._v(e._s(e.tree.desc))])],1)],1),e.isFolder?a("ul",{directives:[{name:"show",rawName:"v-show",value:e.isOpen,expression:"isOpen"}],staticClass:"no-list-style"},e._l(e.tree.tree,(function(e,t){return a("treeview",{key:t,staticClass:"tree",attrs:{name:t,tree:e}})})),1):e._e()])},ee=[],te={name:"treeview",props:{name:String,tree:Object},data:function(){return{isOpen:!0}},computed:{isFolder:function(){return this.tree.tree&&Object.keys(this.tree.tree).length}},methods:{toggle:function(){this.isFolder&&(this.isOpen=!this.isOpen)}}},ae=te,ne=(a("6583"),Object(h["a"])(ae,Z,ee,!1,null,null,null)),se=ne.exports,ie={demo:{path:"demo",content:a("a068").default.content},axisbuffer:{path:"axisbuffer",content:a("812c").default.content},hsconv2:{path:"hsconv2",content:a("9d5b").default.content},riscv:{path:"riscv"}},oe=a("6c73"),re=function e(t,a,n,s){var i=t[0];return n.tree[i]||(n.tree[i]={desc:"",tree:{}}),t.length>1?(t.shift(),n.tree[i]=e(t,a,n.tree[i],s+1)):n.tree[i].desc=a,n};for(var ce in oe)if(oe.hasOwnProperty(ce)){var le=ce.split("/");""===le[le.length-1]&&(le[le.length-2]=le[le.length-2]+"/",le.pop());var de=le[0];ie[de]&&(ie[de].tree||(ie[de].tree={}),le.shift(),ie[de]=re(le,oe[ce],ie[de],0))}for(var ue={name:"examples",components:{TreeView:se},data:function(){return{examples:ie,active:"axisbuffer"}}},he=ue,pe=(a("f1cb"),Object(h["a"])(he,Y,X,!1,null,null,null)),me=pe.exports,fe=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"cases container"},[a("section",{staticClass:"section"},[a("h1",{staticClass:"title"},[e._v(" Enumeration of multiple use cases to co-execute software and hardware ")]),a("div",{staticClass:"content has-text-justified"},[e._v(e._s(e.intro))])]),a("CasesTable",{attrs:{data:e.activeData,selected:e.tabsel,showKey:e.showKey,total:e.total},on:{"update:selected":function(t){e.tabsel=t},"update:showKey":function(t){e.showKey=t},"update:show-key":function(t){e.showKey=t}}}),a("hr"),a("CasesTableKey",{directives:[{name:"show",rawName:"v-show",value:e.showKey,expression:"showKey"}],staticClass:"box",model:{value:e.keys,callback:function(t){e.keys=t},expression:"keys"}}),a("div",{directives:[{name:"show",rawName:"v-show",value:"content"in e.tabsel,expression:"'content' in tabsel"}],staticClass:"box has-text-justified"},[a("div",{staticClass:"content",domProps:{innerHTML:e._s(e.marked("content"in e.tabsel?e.tabsel.content:"empty content field"))}})]),a("div",{staticClass:"content has-text-justified",domProps:{innerHTML:e._s(e.marked(e.content))}})],1)},be=[],ge=(a("159b"),function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("section",[a("b-table",{attrs:{data:e.data,selected:e.selected,paginated:!0,"per-page":e.perPage,"pagination-simple":!1,paginationSize:"is-small",bordered:!1,striped:!0,narrowed:!0,hoverable:!0,loading:!1,focusable:!0,"mobile-cards":!0,"default-sort-direction":"asc","default-sort":"status"},on:{"update:selected":function(t){return e.$emit("update:selected",t)},click:e.clicked},scopedSlots:e._u([{key:"bottom-left",fn:function(){return[a("div",{staticClass:"field is-grouped"},[a("div",{staticClass:"control"},[a("b-switch",{staticStyle:{"vertical-align":"middle"},attrs:{"native-value":e.showKey,size:"is-small"},on:{input:function(t){return e.$emit("update:showKey",t)}}},[e._v("Key")])],1),a("div",{staticClass:"control"},[a("div",{staticClass:"button is-static is-small"},[e._v(" "+e._s(e.data.length)+" / "+e._s(e.total)+" ")])]),a("div",{staticClass:"field has-addons"},[a("div",{staticClass:"control"},[a("div",{staticClass:"select is-small"},[a("select",{directives:[{name:"model",rawName:"v-model",value:e.perPage,expression:"perPage"}],on:{change:function(t){var a=Array.prototype.filter.call(t.target.options,(function(e){return e.selected})).map((function(e){var t="_value"in e?e._value:e.value;return t}));e.perPage=t.target.multiple?a:a[0]}}},e._l([5,10,15,30],(function(t){return a("option",{key:t,domProps:{value:t}},[e._v(" "+e._s(t)+" ")])})),0)])]),a("div",{staticClass:"control"},[a("div",{staticClass:"button is-static is-small"},[e._v("per page")])])])])]},proxy:!0},{key:"empty",fn:function(){return[a("section",{staticClass:"section"},[a("div",{staticClass:"content has-text-grey has-text-centered"},[a("p",[a("b-icon",{attrs:{icon:"emoticon-sad",size:"is-large"}})],1),a("p",[e._v("Nothing here.")])])])]},proxy:!0}])},[a("b-table-column",{attrs:{field:"status",label:"Status",width:"75",sortable:""},scopedSlots:e._u([{key:"default",fn:function(t){return[a("b-icon",{attrs:{icon:e.stIcon(t.row.status),type:e.stType(t.row.status)}})]}}])}),a("b-table-column",{attrs:{field:"id",label:" ID ",width:"60",centered:""},scopedSlots:e._u([{key:"default",fn:function(t){return[e._v(" "+e._s(t.row.id)+" ")]}}])}),a("b-table-column",{attrs:{field:"src",label:"Source",width:"40",sortable:""},scopedSlots:e._u([{key:"default",fn:function(t){return[a("span",{staticClass:"tag",class:t.row.src?"is-success":"is-warning"},[e._v(" "+e._s(t.row.src?"y":"n")+" ")])]}}])}),a("b-table-column",{attrs:{field:"soft",label:"Software",centered:"",sortable:""},scopedSlots:e._u([{key:"default",fn:function(t){return[e._v(" "+e._s(t.row.soft)+" ")]}}])}),a("b-table-column",{attrs:{field:"hard",label:"Hardware",centered:"",sortable:""},scopedSlots:e._u([{key:"default",fn:function(t){return[e._v(" "+e._s(t.row.hard)+" ")]}}])}),a("b-table-column",{attrs:{field:"artifacts",label:"Artifacts"},scopedSlots:e._u([{key:"default",fn:function(t){return[a("b-field",{attrs:{grouped:"","group-multiline":""}},e._l(t.row.artifacts,(function(t){return a("div",{key:t,staticClass:"control"},[a("b-taglist",{attrs:{attached:""}},e._l(t.split(":"),(function(n){return a("b-tag",{key:t+n,attrs:{size:"is-small",type:e.tagColor(n)}},[e._v(e._s(n))])})),1)],1)})),0)]}}])}),a("b-table-column",{attrs:{field:"dependencies",label:"Dependencies"},scopedSlots:e._u([{key:"default",fn:function(t){return[a("b-taglist",e._l(t.row.dependencies,(function(t){return a("b-tag",{key:t,attrs:{size:"is-small",type:e.tagColor(t)}},[e._v(e._s(t))])})),1)]}}])})],1)],1)}),ve=[],ye=(a("a9e3"),{name:"casestable",props:{data:Array,selected:Object,showKey:Boolean,total:Number},data:function(){return{perPage:30,hasMobileCards:!0}},methods:{clicked:function(e){e===this.selected&&this.$emit("update:selected",{})}}}),we=ye,xe=(a("d1c6"),Object(h["a"])(we,ge,ve,!1,null,null,null)),_e=xe.exports,Ce=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("div",{staticClass:"tile is-ancestor has-text-justified"},[a("div",{staticClass:"tile is-parent is-vertical"},[a("div",[e._m(0),e._l(e.d.status.items,(function(t,n){return a("div",{key:n,staticClass:"field",class:{"is-disabled":!e.value.status[n[0]]}},[a("b-checkbox",{class:{"has-text-weight-bold":e.value.status[n[0]]},model:{value:e.value.status[n[0]],callback:function(t){e.$set(e.value.status,n[0],t)},expression:"value.status[c[0]]"}},[a("b-icon",{attrs:{icon:e.stIcon(n),type:e.stType(n)}})],1),a("p",{staticClass:"is-size-7 is-italic has-text-weight-light"},[e._v(e._s(t))])],1)}))],2),a("hr"),a("div",[a("div",{staticClass:"content"},[a("span",{staticClass:"is-size-4 has-text-primary"},[e._v("Source")]),a("p",[e._v(e._s(e.d.src.desc))])]),e._l(e.d.src.items,(function(t,n){return a("div",{key:n,staticClass:"field",class:{"is-disabled":!e.value.src[n[0]]}},[a("b-checkbox",{class:{"has-text-weight-bold":e.value.src[n[0]]},model:{value:e.value.src[n[0]],callback:function(t){e.$set(e.value.src,n[0],t)},expression:"value.src[c[0]]"}},[e._v(e._s(n))]),a("p",{staticClass:"is-size-7 is-italic has-text-weight-light"},[e._v(e._s(t))])],1)}))],2)]),a("div",{staticClass:"tile is-parent is-vertical"},[a("div",[a("div",{staticClass:"content"},[a("span",{staticClass:"is-size-4 has-text-primary"},[e._v("Software")]),a("p",[e._v(e._s(e.d.soft.desc))])]),e._l(e.d.soft.items,(function(t,n){return a("div",{key:n,staticClass:"field",class:{"is-disabled":!e.value.soft[n[0]]}},[a("b-checkbox",{class:{"has-text-weight-bold":e.value.soft[n[0]]},model:{value:e.value.soft[n[0]],callback:function(t){e.$set(e.value.soft,n[0],t)},expression:"value.soft[c[0]]"}},[e._v(e._s(n))]),a("p",{staticClass:"is-size-7 is-italic has-text-weight-light"},[e._v(e._s(t))])],1)}))],2),a("hr"),a("div",[a("div",{staticClass:"content"},[a("span",{staticClass:"is-size-4 has-text-primary"},[e._v("Hardware")]),a("p",[e._v(e._s(e.d.hard.desc))])]),e._l(e.d.hard.items,(function(t,n){return a("div",{key:n,staticClass:"field",class:{"is-disabled":!e.value.hard[n[0]]}},[a("b-checkbox",{class:{"has-text-weight-bold":e.value.hard[n[0]]},model:{value:e.value.hard[n[0]],callback:function(t){e.$set(e.value.hard,n[0],t)},expression:"value.hard[c[0]]"}},[e._v(e._s(n))]),a("p",{staticClass:"is-size-7 is-italic has-text-weight-light"},[e._v(e._s(t))])],1)}))],2)]),a("div",{staticClass:"tile is-parent is-vertical"},[e._m(1),e._l(e.d.artifacts.items,(function(t,n){return a("div",{key:n,staticClass:"field"},[a("div",{staticClass:"is-grouped"},[a("b-icon",{staticStyle:{"vertical-align":"bottom"},attrs:{type:"is-primary",icon:"checkbox-intermediate"}}),a("span",{staticClass:"control-label has-text-weight-bold",staticStyle:{"padding-left":"0.5rem"}},[e._v(e._s(n))])],1),a("p",{staticClass:"is-size-7 is-italic has-text-weight-light",staticStyle:{"padding-top":"0.2rem"}},[e._v(" "+e._s(t)+" ")])])}))],2)])])},ke=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("span",{staticClass:"is-size-4 has-text-primary"},[e._v("Status")])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("span",{staticClass:"is-size-4 has-text-primary"},[e._v("Artifacts")])])}],De={name:"casestablekey",props:{value:Object},data:function(){return{d:a("acf5")}}},Oe=De,Se=(a("b534"),Object(h["a"])(Oe,Ce,ke,!1,null,null,null)),He=Se.exports,Ie={soft:["arm","amd64","user","system"],srcs:["yes","no"],hard:["arm","amd64","pl"],status:["supported","roadmap","third-party","out-of-scope","unknown"]},Le={},Ee=0;Ee<Ie["soft"].length;Ee++)for(var Pe=0;Pe<Ie["srcs"].length;Pe++)for(var Te=0;Te<Ie["hard"].length;Te++){var Ae=Ie["soft"][Ee],Me="yes"===Ie["srcs"][Pe],je=Ie["hard"][Te],Ue=(Me?"y":"n")+("amd64"===Ae?"x":Ae[0])+("amd64"===je?"x":je[0]);Le[Ue]={soft:Ae,src:Me,hard:je,status:"unknown",artifacts:"",content:"No available info for this use case."}}a("1c1a").keys().forEach((function(e){var t=a("c5d7")("./"+e.substring(2)).default,n=t.data.id;void 0!=n&&(void 0==Le[n]?console.log("WARNING: case <"+n+"> from file <"+e.substring(2)+"> is undefined!"):(Le[n].status=t.data.status,Le[n].artifacts=t.data.artifacts,Le[n].content=t.content,Le[n].dependencies=t.data.dependencies))}));var Ve=[];for(var Re in Le)if(Le.hasOwnProperty(Re)){var Ge=Le[Re];Ge["id"]=Re,Ve.push(Ge)}var Be={status:{s:!0,r:!0,t:!0,o:!0,u:!0},src:{y:!0,n:!0},soft:{a:!0,x:!0,u:!0,s:!0},hard:{a:!0,x:!0,p:!0}},ze=a("6a03").default,Ne={name:"cases",components:{CasesTable:_e,CasesTableKey:He},data:function(){return{intro:ze.data.intro,content:ze.content,total:Ve.length,tabsel:{},showKey:!1,keys:this.initKeys()}},computed:{activeData:function(){var e=[];if(0!=Ve.length){var t=this.keys;Ve.forEach((function(a){t.status[a.status[0]]&&t.src[a.id[0]]&&t.soft[a.id[1]]&&t.hard[a.id[2]]&&e.push(a)}))}return e}},methods:{initKeys:function(){try{var e=JSON.parse(localStorage.getItem("cases-keys"));if(null!=e)return e}catch(t){localStorage.removeItem("cases-keys")}return Be}},watch:{activeData:function(){localStorage.setItem("cases-keys",JSON.stringify(this.keys))}}},Fe=Ne,$e=Object(h["a"])(Fe,fe,be,!1,null,null,null),qe=$e.exports,Je=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"about container"},[e._m(0),a("ToDo")],1)},Ke=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"section"},[a("div",{staticClass:"box"},[a("strong",[e._v("DBHI")]),e._v(" by "),a("a",{attrs:{href:"https://github.com/umarcor"}},[e._v("Unai Martinez-Corral")]),e._v(" and "),a("a",{attrs:{href:"https://github.com/GuillermoCallaghan"}},[e._v("Guillermo Callaghan")])])])}],Qe=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"about container"},[a("div",{staticClass:"tabs is-centered"},[a("ul",e._l(e.todos,(function(t,n){return a("li",{key:n,class:{"is-active":n==e.active}},[a("a",{on:{click:function(t){e.active=n}}},[e._v(e._s(n))])])})),0)]),a("div",{staticClass:"content has-text-justified",domProps:{innerHTML:e._s(e.marked(e.todos[e.active]))}})])},We=[],Ye={};["Contributions","ToDo","Site","CLI"].forEach((function(e){var t=a("800e")("./"+e+".md").default;Ye[e]=t.content}));var Xe={name:"todo",data:function(){return{todos:Ye,active:"Contributions"}}},Ze=Xe,et=Object(h["a"])(Ze,Qe,We,!1,null,null,null),tt=et.exports,at={name:"about",components:{ToDo:tt}},nt=at,st=Object(h["a"])(nt,Je,Ke,!1,null,null,null),it=st.exports;n["a"].use(S["a"]);var ot=new S["a"]({mode:"history",base:"/concept/",routes:[{path:"/",name:"home",component:P},{path:"/tools/:tool",name:"tool",component:$},{path:"/tools*",name:"tools",component:$},{path:"/flow*",name:"flow",component:W},{path:"/run*",name:"run",component:function(){return a.e("run").then(a.bind(null,"6494"))}},{path:"/examples*",name:"examples",component:me},{path:"/cases*",name:"cases",component:qe},{path:"/about*",name:"about",component:it},{path:"/doc*",name:"doc",component:function(){return a.e("doc").then(a.bind(null,"ec2d"))},props:{msg:"godoc"}},{path:"*",name:"404",component:function(){return a.e("doc").then(a.bind(null,"7746"))}}]}),rt=a("2f62");n["a"].use(rt["a"]);var ct=new rt["a"].Store({state:{},mutations:{},actions:{}});Object(s["sync"])(ct,ot),n["a"].config.productionTip=!1,new n["a"]({router:ot,store:ct,render:function(e){return e(O)}}).$mount("#app")},5898:function(e,t,a){"use strict";a.r(t),t["default"]={content:"\nno content yet\n",data:{tool:"protoc",gh:"protocolbuffers/protobuf",wikipedia:"Protocol_Buffers",site:"https://developers.google.com/protocol-buffers/"},isEmpty:!1,excerpt:""}},"5a96":function(e,t,a){"use strict";a.r(t),t["default"]={content:"# FixME\n\n- Fix hsconv2. Make checks work.\n- Add small diagram to paper.\n\n---\n\n- Build `arm32v7` docker images, and build DynamoRIO for `armv7` or `aarch32`.\n  - [dbhi/docker#1](https://github.com/dbhi/docker/issues/1)\n  - [DynamoRIO/dynamorio#3382](https://github.com/DynamoRIO/dynamorio/pull/3382)\n  - [DynamoRIO/dynamorio#3400](https://github.com/DynamoRIO/dynamorio/pull/3400)\n  - [DynamoRIO/dynamorio#3403](https://github.com/DynamoRIO/dynamorio/pull/3403)\n- PYNQ v2.3 and v2.4 SD images work. However, after executing `apt upgrade`, `gdb` fails as reported at [Xilinx/PYNQ#817](https://github.com/Xilinx/PYNQ/issues/817).\n- Building GHDL and Dynamorio fails with `kata-runtime`. See [dbhi/docker#1](https://github.com/dbhi/docker/issues/1).\n\n## Should be fixed, need check\n\n- Segmentation fault on PYNQ/ZYNQ when executing `./dbhi ./hsconv_main`. See [lgeek/mambo_memcheck#5](https://github.com/lgeek/mambo_memcheck/issues/5).\n\n# Work in progress\n\n- @iordanouki commented that he was working with IP cores written in HLS that used AXI Master interfaces.\n  @umarcor has enhanced the memory model of VUnit's Verification Component library to allow external access (as with\n  strings and integer vectors).\n  This has been tested with very simple HLS cores exported to VHDL, and there is a working example.\n  However, we need to test it on more complex designs yet.\n\n- @umarcor developed a VHDL clock-gating package for simulation that allows synchronized co-execution in multi-threaded\n  contexts.\n  This has been used to develop a prototype with a Flask web server and a Vue.js frontend that provides custom\n  _real-time_ visualization of the buffers/memories that are externally accesible.\n\n- @umarcor developed C++ sources to bind a VHDL simulation as a built-in function in Octave.\n  This allows to share data between Octave's workspace and the simulation, without writing intermediate (CSV, BIN) files\n  to disk.\n\n---\n\n- GHDL is not required in mambo/dr images, but libraries must be available. Is it feasible to copy them to the work dir?\n- Is ruby required for mambo?\n- @Cosmin. Add feature `mambo_register_function_cb` to the `master` branch of the public repo of MAMBO. See [beehive-lab/mambo/tree/symhooks](https://github.com/beehive-lab/mambo/tree/symhooks).\n  - Is it possible to add `mambo_register_function_replace` (i.e. `plugin/plugin.c`) too?\n- Add example Vivado design?\n- Docker cannot be installed on `zynq`, but it might work on UltraScale+ MPSoC.\n- Enable LLVM optimization phases in GHDL. https://github.com/ghdl/ghdl/issues/667\n- Install additional dependencies on `mambo-vm`. Execute tests inside (with(out) docker). `sshfs -p 5040 alarm@localhost: tmp-mambo/`\n- Find a procedure to get the compilation order from VUnit VHDL. Custom `run.py` that exports a list/json?\n- Reduce the compilation overhead by either:\n  - Building the C wrapper as a shared library.\n  - Using a device node or pipe\n- https://xilinx-wiki.atlassian.net/wiki/spaces/A/pages/18842109/QEMU+SystemC+and+TLM+CoSimulation\n  - https://xilinx-wiki.atlassian.net/wiki/spaces/A/pages/18842060/QEMU#QEMU-RunningaLinuxKernelImageInQEMU\n\n---\n\n- golangci-lint\n- codeclimate\n- man page(s) See [Generating Man Pages For Your Own cobra.Command](https://github.com/spf13/cobra/blob/master/doc/man_docs.md).\n- rice-box\n\n# Enhance docker images\n\n- Add docker images based on Debian.\n- When sources of the examples are made public, add a test stage to `travis-ci.com/dbhi/docker`. Push images/manifests only if tests pass.\n  - When these tests are implemented, we can go back to using `master` branches for development, instead of using a fixed commit for each tool.\n- Implement verioning. I.e., when a tagged commit is pushed, create two tags: `*` and `*_vYY.MM`.\n\n# Currently supported platforms\n\n- arm32v7 GNU/Linux (tested ubuntu:18.04)\n- aarch64 GNU/Linux (tested ubuntu:18.04)\n- amd64 GNU/Linux (tested ubuntu:18.04, debian:buster) or Windows 10 (partial native, full in containers)\n",data:{},isEmpty:!1,excerpt:""}},"5c0b":function(e,t,a){"use strict";a("9c0c")},"5e63":function(e,t,a){"use strict";a("22c4")},6242:function(e,t,a){"use strict";a.r(t),t["default"]={content:"\n- Build VHDL sources on/for ARM.\n- Build VHPI wrapper (C) on/for ARM.\n- Build gRPC client (C or golang) with the VHPI wrapper (C) on/for ARM.\n- Modify the sources to use the gRPC client library (C), instead of the original function.\n- Build the application on/for amd64.\n- Get/build gRPC server on/for amd64 or ARM.\n",data:{id:"yxa",status:"supported",artifacts:["grpc","agrpc:amd64","hgrpc:arm"],dependencies:["ghdl","gcc","golang","protoc"]},isEmpty:!1,excerpt:""}},"657c":function(e,t,a){},6583:function(e,t,a){"use strict";a("5008")},"69e0":function(e,t,a){"use strict";a.r(t),t["default"]={content:"",data:{id:"nap",status:"roadmap",artifacts:null},isEmpty:!1,excerpt:""}},"6a03":function(e,t,a){"use strict";a.r(t),t["default"]={content:"\n## Multiple hardware simulations in parallel on the same host\n\nGHDL is CPU bound and it is not multi-threaded. However, it is possible to build multiple `hgrpc` binaries and execute them at the same time. If two or more of these are to be executed on the same host, performance can be improved by using go channels directly, instead of gRPC. In order to do so, execute `dbhi server add <path to hgrpc>` once for each binary, instead of executing them directly.\n\n---\n\n- the server can support both gRPC and channels (need to adapt it)\n- the client libraries (golang exported to C) can support both gRPC and channes (need to adapt them)\n\n---\n\n- in order to execute multiple hardware binaries on a host and other several on a different host, two grpc servers need to be started.\n- I do not remember if data forwarding between servers is implemented yet.\n",data:{intro:"There are several alternatives for hardware-software co-execution. Certainly, very different contexts are shaped after constraints such as where is the software application to be executed, whether sources are available, if the host and the target architectures match, etc. All of the environments that are currently supported by DBHI are shown in the table below, along with those which are on the roadmap and others which have been reported by third-parties."},isEmpty:!1,excerpt:""}},"6c73":function(e){e.exports=JSON.parse('{"axisbuffer/app/":"sources of the software application","axisbuffer/axisbuffer.json":"configuration file","axisbuffer/build":"artifacts (executable binaries and intermediate objects)","axisbuffer/build/bin/":"executable binaries corresponding to the built targets","axisbuffer/build/client/":"processed sources and intermediate artifacts of the DynamoRIO client","axisbuffer/build/obj/":"intermediate artifacts (objects) produced when sources (C or VHDL) are analyzed/compiled","axisbuffer/vhdl":"sources of the UUT, VUnit script, C wrappers, etc.","axisbuffer/vhdl/impl/":"wrapper of the UUT for implementation","axisbuffer/vhdl/srcs/":"HDL sources of the UUT","axisbuffer/vhdl/test":"sources and data to evaluate the UUT through use cases","axisbuffer/vhdl/test/c":"sources to build targets with embedded GHDL (happ, hdbm)","axisbuffer/vhdl/test/c/pkg_c.vhd":"declaration binds between C functions and VHDL functions/procedures","axisbuffer/vhdl/test/c/tb_c_axisbuffer.vhd":"testbench to be used when GHDL embedded with some C wrapper","axisbuffer/vhdl/test/c/wrapper.c":"replacement for the target function, and functions to be called by the GHDL simulation","axisbuffer/vhdl/test/data/":"data used for testing","axisbuffer/vhdl/test/grpc/":"sources to build simulation binaries wrapped around with a gRPC client (hgrpc)","axisbuffer/vhdl/test/py":"sources for a usual simulation with VUnit","axisbuffer/vhdl/test/py/sim.py":"VUnit simulation script (entrypoint)","axisbuffer/vhdl/test/py/tb_py_axisbuffer.vhd":"testbench to simulate a VUnit script","axisbuffer/vhdl/test/py/vunit_out":"artifacts generated by VUnit","axisbuffer/vhdl/test/py/vunit_out/ghdl/libraries/":"compilation objects generated by GHDL when analyzing VHDL sources","axisbuffer/vhdl/test/py/vunit_out/test_output/":"logs generated with VUnit\'s logging features","demo/app/":"sources of the software application","demo/build":"artifacts (executable binaries and intermediate objects)","demo/build/bin/":"executable binaries corresponding to the built targets","demo/build/obj/":"intermediate artifacts (objects) produced when sources (C or VHDL) are analyzed/compiled","demo/demo.json":"configuration file","demo/vhdl":"sources of the UUT, VUnit script, C wrappers, etc.","demo/vhdl/test":"sources and data to evaluate the UUT through use cases","demo/vhdl/test/c":"sources to build targets with embedded GHDL (happ, hdbm)","demo/vhdl/test/c/pkg_c.vhd":"declaration binds between C functions and VHDL functions/procedures","demo/vhdl/test/c/tb_c_demo.vhd":"testbench to be used when GHDL embedded with some C wrapper","demo/vhdl/test/c/wrapper.c":"replacement for the target function, and functions to be called by the GHDL simulation","hsconv2/app/":"sources of the software application","hsconv2/build":"artifacts (executable binaries and intermediate objects)","hsconv2/build/bin/":"executable binaries corresponding to the built targets","hsconv2/build/client/":"processed sources and intermediate artifacts of the DynamoRIO client","hsconv2/build/obj/":"intermediate artifacts (objects) produced when sources (C or VHDL) are analyzed/compiled","hsconv2/vhdl":"sources of the UUT, VUnit script, C wrappers, etc.","hsconv2/vhdl/impl/":"wrapper of the UUT for implementation","hsconv2/vhdl/srcs/":"HDL sources of the UUT","hsconv2/vhdl/test":"sources and data to evaluate the UUT through use cases","hsconv2/vhdl/test/c":"sources to build targets with embedded GHDL (happ, hdbm)","hsconv2/vhdl/test/c/pkg_c.vhd":"declaration binds between C functions and VHDL functions/procedures","hsconv2/vhdl/test/c/tb_c_axis_hsconv2.vhd":"testbench to be used when GHDL embedded with some C wrapper","hsconv2/vhdl/test/c/wrapper.c":"replacement for the target function, and functions to be called by the GHDL simulation","hsconv2/vhdl/test/data/":"data used for testing","hsconv2/vhdl/test/m":"companion matlab/octave scripts to generate test data","hsconv2/vhdl/test/py":"sources for a usual simulation with VUnit","hsconv2/vhdl/test/py/sim.py":"VUnit simulation script (entrypoint)","hsconv2/vhdl/test/py/tb_py_axis_hsconv2.vhd":"testbench to simulate a VUnit script","hsconv2/vhdl/test/py/vunit_out":"artifacts generated by VUnit","hsconv2/vhdl/test/py/vunit_out/ghdl/libraries/":"compilation objects generated by GHDL when analyzing VHDL sources","riscv/app/":"sources of the software application","riscv/vhdl":"sources of the UUT, VUnit script, C wrappers, etc.","riscv/vhdl/impl/":"wrapper of the UUT for implementation","riscv/vhdl/srcs/":"HDL sources of the UUT","riscv/vhdl/test":"sources and data to evaluate the UUT through use cases","riscv/vhdl/test/c":"sources to build targets with embedded GHDL (happ, hdbm)","riscv/vhdl/test/c/pkg_c.vhd":"declaration binds between C functions and VHDL functions/procedures","riscv/vhdl/test/c/tb_c_murax.vhd":"testbench to be used when GHDL embedded with some C wrapper","riscv/vhdl/test/c/wrapper.c":"replacement for the target function, and functions to be called by the GHDL simulation","riscv/vhdl/test/py":"sources for a usual simulation with VUnit","riscv/vhdl/test/py/sim.py":"VUnit simulation script (entrypoint)","riscv/vhdl/test/py/tb_py_murax.vhd":"testbench to simulate a VUnit script"}')},"6e08":function(e,t,a){"use strict";a.r(t),t["default"]={content:"\n- Build VHDL sources on/for ARM.\n- Build VHPI wrapper (C) on/for ARM.\n- Modify the sources to use VHPI wrapper (C), instead of the original function.\n- Build the application on/for ARM.\n",data:{id:"yaa",status:"supported",artifacts:["happ:arm"],dependencies:["ghdl","gcc"]},isEmpty:!1,excerpt:""}},"7acc":function(e,t,a){"use strict";a.r(t),t["default"]={content:"\nno content yet\n",data:{tool:"Containers (Docker)",gh:"docker",wikipedia:"Docker_(software)",site:"https://www.docker.com/"},isEmpty:!1,excerpt:""}},"800e":function(e,t,a){var n={"./CLI.md":"c6e9","./Contributions.md":"8547","./Site.md":"2d0c","./ToDo.md":"5a96"};function s(e){var t=i(e);return a(t)}function i(e){if(!a.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}s.keys=function(){return Object.keys(n)},s.resolve=i,e.exports=s,s.id="800e"},"812c":function(e,t,a){"use strict";a.r(t),t["default"]={content:"# axisbuffer\n\n- The target design in this example is an AXI4 Stream buffer: an IP core with one AXI4 Stream Slave interface, one AXI4 Stream Master interface and a FIFO between them.\n- The prototype of the test function is `cp(int32_t *I, int32_t *O, uint32_t l)`.\n- The application allocates two memory regions of size `length*sizeof(data_type)` bytes and generates `length` pseudo-random values in one of them (`*I`). Then, `cp` is called, and the result is checked.\n  - In the software version, data is copied with `memcpy`.\n  - In the VHDL C testbench, data is passed from `*I` to a VUnit verification component, then to the target IP, and back to `*O` through another verification component.\n  - In the VHDL Python testbench, data is read from a CSV file and saved to a different CSV file. Moreover, data is arranged in 2D and it is transferred row-by-row.\n",data:{},isEmpty:!1,excerpt:""}},"84ae":function(e,t,a){"use strict";a.r(t),t["default"]={content:"",data:{id:"yxp",status:"out-of-scope",artifacts:null},isEmpty:!1,excerpt:""}},8547:function(e,t,a){"use strict";a.r(t),t["default"]={content:"@umarcor:\n\n- Enhance VUnit's build options for GHDL in order to compile VHDL sources and build PIE binaries without executing the simulation.\n- Enhance `string_ptr` and `integer_vector_ptr` VHDL data types in VUnit, by contributing 'external modes' that allow to use GHDL's VHPIDIRECT support as a built-in feature. Provide C API header (`vhpidirect_user.h`) that maps to default VHDL procedures/functions.\n- Fix VUnit's handling of return values to properly detect simulation success/failure status.\n- Enhance GHDL's build procedure and sources to support building PIE binaries with custom functions by default.\n- Develop/adapt use three use cases to test the workflow:\n  - `axis_buffer` adapted from VUnit's example.\n  - `hsconv2` is his own design.\n  - `riscv` is generated with SpinalHDL's VexRiscV. A custom AXI Stream peripheral was written.\n- Develop prototype of gRPC client/server framework in golang, and provide _glue_ sources to use the client from C applications (dbhi/grpc).\n- Develop reference `main.c` source that allows to use VUnit and GHDL in any of the workflows below (standalone, embedded, dynamically loaded, etc.).\n- Develop/enhance shell scripts (dbhi/qus) to allow executing tools for foreign applications using QEMU and Docker (OCI containers).\n- Develop multiarch Docker images that allow to test the proposed workflow on any target architecture/platform (dbhi/docker). Images for `amd64`, `arm32v7` and `arm64v8` are provided.\n  - These images were used to execute the tests on some of the target platforms and/or to generate the binaries.\n\n---\n\n@GuillermoCallaghan:\n\n- Develop DBHI plugin v1 for MAMBO (`mambo_plugin.c`), which uses MAMBO's API to call a function built in the plugin while preserving the arguments that are passed to the functions that is replaced. The implementation supports arm, thumb and/or aarch64.\n\n---\n\n@lgeek:\n\n- Add `mambo_register_function_replace` to MAMBO's public API, which allows to replace a function in a target application with a handler/callback. Also, apply multiple fixes/enhancements to MAMBO so that the examples work on any of the target armv7 or aarch64 devices. .\n",data:{},isEmpty:!1,excerpt:""}},8750:function(e,t,a){"use strict";a.r(t),t["default"]={content:"\nno content yet\n",data:{tool:"GHDL",gh:"ghdl",site:"http://ghdl.free.fr/"},isEmpty:!1,excerpt:""}},"93bd":function(e,t,a){"use strict";a("0d40")},"9c0c":function(e,t,a){},"9d5b":function(e,t,a){"use strict";a.r(t),t["default"]={content:"# hsconv2\n\n- The target design in this example is a sliding window spatial filter for hyperspectral cubes expecting data as a Band Interleaved by Pixel (BIP) stream. The main input is a FIFO interface to be written to, and the main output is a FIFO interface to be read from. The IP requires additional pairs of AXI4 Stream interfaces, to be connected to a buffer (either in hardware, in cache or in external memory). `(k-1)/2` master-slave pairs are required, where `k` is the size of the window (3, 5, 7...).\n- The prototype of the test function is `hsconv2(int16_t *I, int16_t *O, uint16_t k, uint16_t b, uint16_t w, uint16_t h)`.\n- The application allocates two memory regions of size `b*w*h*sizeof(data_type)` bytes, where `b` is the number of bands, `w` is the number of pixels/columns per spatial row, and `h` is the number of spatial rows. Input data is read from a binary file (`data.bin`) with a header of 32 bytes and the input stream starting at address `0x0010`. Then, `hsconv2` is called. Last, the expected result is read from a binary file (`ref.bin`) and it is compared with the output of the function.\n\n```\ndata.bin format\nheader size: 32 bytes\n\n0x0000 | data_width\n0x0002 | window_width\n0x0004 | window_div\n0x0006 | band_depth\n0x0008 | line_width\n0x000a | spatial_height\n0x000c | zpadding\n0x000e | -\n0x0010 | I\n```\n\n> NOTE: ATM `data_width` must be `16` and, the `window_width` must be `3` and `window_div` must be 3.\n\n- In the software version, nothing is done, it is just a placeholder.\n- In the VHDL C testbench, data is passed from `*I` to a VUnit verification component, then to the target IP, and back to `*O` through another verification component.\n- In the VHDL Python testbench, data is read from a CSV file and saved to a different CSV file. Moreover, data is arranged in 2D (each row corresponding to a pixel) and it is transferred row-by-row.\n\n> TODO: The IP requires the first and last spatial rows of the cube to be sent twice. Also, any data should be pushed to the input after all the valid stream is processed, in order to flush remaining valid data in the pipeline. This is handled in the VHDL testbench ATM, but it should be done in the C wrapper, as it will be done by the software in the target platform.\n\n> TODO: ATM parameters and defined manually in octave/matlab and in VUnit. Should export JSON from `imgs2mats.m`, and import it in `sim.py`.\n\n> TODO: Guess how to share data between C and VHDL which is different from `uint32_t`/`int32_t`/`integer`.\n\n> TODO: Check (compare) simulation results in C. Write to binary (`out.bin`), and read it from octave/matlab.\n",data:{},isEmpty:!1,excerpt:""}},a068:function(e,t,a){"use strict";a.r(t),t["default"]={content:"# demo\n\n- This a minimal working example to combine GHDL and a DBM tool (MAMBO or DynamoRIO). VUnit is not used.\n- The original function in the software app just prints `[demo] placeholder`.\n- The DBM tool replace it with the VHDL simulation, which prints `HELLO WORLD!`, generates an image in a memory buffer and saves it to a file (`mmap_img.raw24`).\n",data:{},isEmpty:!1,excerpt:""}},acf5:function(e){e.exports=JSON.parse('{"status":{"items":{"supported":"currently supported","roadmap":"on the roadmap, but not supported yet","third-party":"reported by third-parties, but not supported","out-of-scope":"out of the scope of the project","unknown":"not defined (unknown)"}},"src":{"desc":"whether the source code of the software application is available.","items":{"y | yes":"","n | no":""}},"soft":{"desc":"where is the software application to be executed.","items":{"a | arm":"on an ARM device (either armv7, aarch32 or aarch4)","x | amd64":"on an amd64 device (either amd64, x86_64 or i686)","u | user":"built for ARM but executed on amd64 through QEMU user-mode","s | system":"built for ARM but executed on amd64 through QEMU system-mode"}},"hard":{"desc":"where is the hardware accelerator to be executed.","items":{"a | arm":"compiled HDL on an ARM device","x | amd64":"compiled HDL on an amd64 device","p | PL":"actually synthesised and implemented in the Programmable Logic (PL) of a SoC with an ARM core"}},"artifacts":{"items":{"app":"application","happ":"single binary (software and hard)","hdbm":"DBM with GHDL embedded in a plugin","grpc":"gRPC server","hgrpc":"hard simulation with gRPC client","agrpc":"application with gRPC client","dgrpc":"DBM with gRPC client embedded in a plugin"}}}')},ad34:function(e,t,a){var n={"./docker.md":"7acc","./dynamorio.md":"c3a2","./gcc.md":"5421","./ghdl.md":"8750","./golang.md":"b7ad","./gtkwave.md":"aead","./mambo.md":"c58b","./protoc.md":"5898","./spinalhdl.md":"ef74","./tools.md":"c1e3","./vunit.md":"e352"};function s(e){var t=i(e);return a(t)}function i(e){if(!a.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}s.keys=function(){return Object.keys(n)},s.resolve=i,e.exports=s,s.id="ad34"},adef:function(e){e.exports=JSON.parse('[{"title":"GitHub repository dbhi/dbhi","ref":"https://github.com/dbhi/dbhi","src":"https://img.shields.io/badge/dbhi-dbhi-f2f1ef.svg?longCache=true&style=flat-square&logo=GitHub&logoColor=f2f1ef"},{"title":"GitHub repository dbhi/run","ref":"https://github.com/dbhi/run","src":"https://img.shields.io/badge/dbhi-run-f2f1ef.svg?longCache=true&style=flat-square&logo=GitHub&logoColor=f2f1ef"},{"title":"GitHub repository dbhi/qus","ref":"https://github.com/dbhi/qus","src":"https://img.shields.io/badge/dbhi-qus-f2f1ef.svg?longCache=true&style=flat-square&logo=GitHub&logoColor=f2f1ef"},{"title":"GitHub repository dbhi/containers","ref":"https://github.com/dbhi/containers","src":"https://img.shields.io/badge/dbhi-containers-f2f1ef.svg?longCache=true&style=flat-square&logo=GitHub&logoColor=f2f1ef"},{"title":"Docker Hub","ref":"https://hub.docker.com/r/aptman/dbhi/","src":"https://img.shields.io/docker/pulls/aptman/dbhi.svg?longCache=true&style=flat-square&logo=docker&logoColor=fff&label=docker.io%2Faptman%2Fdbhi"},{"title":"GitHub repository dbhi/gRPC","ref":"https://github.com/dbhi/gRPC","src":"https://img.shields.io/badge/dbhi-gRPC-f2f1ef.svg?longCache=true&style=flat-square&logo=GitHub&logoColor=f2f1ef"},{"title":"GitHub repository dbhi/binhook","ref":"https://github.com/dbhi/binhook","src":"https://img.shields.io/badge/dbhi-binhook-f2f1ef.svg?longCache=true&style=flat-square&logo=GitHub&logoColor=f2f1ef"},{"title":"GitHub repository dbhi/vboard","ref":"https://github.com/dbhi/vboard","src":"https://img.shields.io/badge/dbhi-vboard-f2f1ef.svg?longCache=true&style=flat-square&logo=GitHub&logoColor=f2f1ef"}]')},aead:function(e,t,a){"use strict";a.r(t),t["default"]={content:"\nno content yet\n",data:{tool:"GtkWave",site:"http://gtkwave.sourceforge.net/"},isEmpty:!1,excerpt:""}},b16c:function(e,t,a){},b534:function(e,t,a){"use strict";a("d8ea")},b7ad:function(e,t,a){"use strict";a.r(t),t["default"]={content:"\nno content yet\nto use gRPC\n",data:{tool:"golang",wikipedia:"Go_(programming_language)",site:"https://golang.org/"},isEmpty:!1,excerpt:""}},c1e3:function(e,t,a){"use strict";a.r(t),t["default"]={content:"\n## Container images\n\nReady-to-use [docker](https://www.docker.com/)|[podman](https://podman.io) images are available at [docker.io/aptman/dbhi](https://hub.docker.com/r/aptman/dbhi/). These images include all the required dependencies to evaluate the design flow with lightweight, open and free tools. Images provided by [docker-library/official-images](https://github.com/docker-library/official-images#architectures-other-than-amd64) are used to build manifests for `amd64`, `arm64v8` and `arm32v7` platforms. Currently, all the images are based on `Ubuntu 18.04 (bionic)`. See [github.com/dbhi/containers](https://github.com/dbhi/containers) for further details.\n\nIf `docker` is available on your target platform, using the provided images is recommended, because the overhead is negligible, it helps reproducibility and it significantly reduces setup time. The following script can be used to test if a platform fulfills the requirements to run the docker daemon:\n\n```bash\ncurl -fsSL https://raw.githubusercontent.com/moby/moby/master/contrib/check-config.sh | bash -\n```\n\n## Manual installation\n\nShould you want to install the tools on your host, the dockerfiles at [github.com/dbhi/containers](https://github.com/dbhi/containers) can be used as a reference. I.e., the same steps can be reproduced in a shell script. Nonetheless, please read the following notes carefully:\n\n- Ensure that all the libraries are built with `-fPIC` when building GHDL.\n- GHDL must be available in the `$PATH`.\n- VUnit must be installed in a default location (e.g. `pip install vunit_hdl`), or:\n  - It must be cloned recursively,\n  - `colorama` must be installed (e.g. `pip install colorama`,\n  - and `PYTHONPATH` must be set.\n- MAMBO must be recursively cloned. ATM, not all the required features are available at the `master` branch of the official repository ([beehive-lab/mambo](https://github.com/beehive-lab/mambo)) yet. Please, clone branch `dbhi` from ([dbhi/mambo](https://github.com/dbhi/mambo)). Set the path to MAMBO through `DBHI_MAMBO`.\n- To get DynamoRIO a release tarball can be downloaded or it can be built from sources. Set `DYNAMORIO_HOME` to the path of the distribution.\n\n> NOTE: Building DynamoRIO with `g++-8` fails on `amd64`. Using `g++-6` or `g++-7` is suggested.\n",data:{intro:"The DBHI design flow is based on an automation CLI constructed from existing off-the-shelf tools. In this section, the tools are enumerated and a brief description is provided along with references to the corresponding web sites, repositories and/or Wikipedia entries. The ones on the left column are required for almost any use case, while the need for those on the right column depends on specific contexts."},isEmpty:!1,excerpt:""}},c3a2:function(e,t,a){"use strict";a.r(t),t["default"]={content:"\nno content yet\n",data:{tool:"DynamoRIO",gh:"DynamoRIO",wikipedia:"DynamoRIO",site:"https://www.dynamorio.org/"},isEmpty:!1,excerpt:""}},c40d:function(e,t,a){"use strict";a.r(t),t["default"]={content:"",data:{id:"yap",status:"roadmap",artifacts:null},isEmpty:!1,excerpt:""}},c58b:function(e,t,a){"use strict";a.r(t),t["default"]={content:"\nno content yet\n(only avilable for ARM platforms)\n",data:{tool:"MAMBO",gh:"beehive-lab/mambo"},isEmpty:!1,excerpt:""}},c5d7:function(e,t,a){var n={"./cases.md":"6a03","./naa.md":"2f19","./nap.md":"69e0","./nax.md":"0b1b","./nxp.md":"012e","./yaa.md":"6e08","./yap.md":"c40d","./yax.md":"04ab","./yxa.md":"6242","./yxp.md":"84ae","./yxx.md":"dab9"};function s(e){var t=i(e);return a(t)}function i(e){if(!a.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}s.keys=function(){return Object.keys(n)},s.resolve=i,e.exports=s,s.id="c5d7"},c6e9:function(e,t,a){"use strict";a.r(t),t["default"]={content:"- Subcommand `site gen`. Support arguments `doc` and/or `egs`.\n  - `doc`: generate markdown docs of the all the commands.\n  - `egs`: generate JSON/markdown auxiliary files for section 'Examples' in `doc/site/src/assets/egs/`.\n- Add subcommand `install test`, which allows to evaluate which dependencies are installed/available.\n- Support optional flag to generate a bash script which is equivalent to a sequence of calls to `dbhi build` and/or `dbhi test`.\n- Add subcommand `bug` to 'start a bug report'. E.g. https://github.com/kyoh86/richgo.\n- Add subcommand `clean` to remove build and test artifacts.\n- Add `--ieee=synopsys -frelaxed` to GHDL args only when required. I.e., provide option in the JSON to set GHDL args.\n\n---\n\n- https://github.com/Digilent/digilent-vivado-scripts\n- https://github.com/pkg/errors\n- https://github.com/kamilsk/breaker\n- http://p.agnihotry.com/post/understanding_the_context_package_in_golang/\n- https://github.com/natefinch/pie\n",data:{},isEmpty:!1,excerpt:""}},d1c6:function(e,t,a){"use strict";a("657c")},d4db:function(e){e.exports=JSON.parse('{"left":[{"name":"Tools","link":"/tools"},{"name":"Flow","link":"/flow"},{"name":"Run","link":"/run"},{"name":"Examples","link":"/examples"},{"name":"Use cases","link":"/cases"}],"right":[{"name":"Doc","link":"/doc"},{"name":"About","link":"/about"}]}')},d8ea:function(e,t,a){},dab9:function(e,t,a){"use strict";a.r(t),t["default"]={content:"\n- Build VHDL sources on/for amd64.\n- Build VHPI wrapper (C) on/for amd64.\n- Modify the sources to use VHPI wrapper (C), instead of the original function.\n- Build the application on/for amd64.\n",data:{id:"yxx",status:"supported",artifacts:["happ:amd64"],dependencies:["ghdl","gcc"]},isEmpty:!1,excerpt:""}},e352:function(e,t,a){"use strict";a.r(t),t["default"]={content:"\nno content yet\n",data:{tool:"VUnit",gh:"VUnit",wikipedia:"List_of_unit_testing_frameworks#VHDL",site:"http://vunit.github.io/"},isEmpty:!1,excerpt:""}},ef74:function(e,t,a){"use strict";a.r(t),t["default"]={content:"\nno content yet\nfor `riscv` only\n",data:{tool:"SpinalHDL",gh:"SpinalHDL",site:"https://spinalhdl.github.io/SpinalDoc-RTD/"},isEmpty:!1,excerpt:""}},f1cb:function(e,t,a){"use strict";a("b16c")}});
//# sourceMappingURL=app.0be9b70c.js.map